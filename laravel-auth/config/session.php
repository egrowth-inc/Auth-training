<?php

use Illuminate\Support\Str;

return [

    'driver' => env('SESSION_DRIVER', 'file'),

        /*
    |--------------------------------------------------------------------------
    | セッションデータをどの方法で保存するかを決めます。
    |　デフォルトではfile（ファイル）を使用しますが、他にもデータベースやキャッシュシステム（Redisなど）を選ぶことができます。
    |--------------------------------------------------------------------------
    |
    | file: サーバー上の特定のフォルダにセッションデータをファイルとして保存します。
　　|　database: データベースのテーブルにセッションデータを保存します。
　　|　redisやmemcached: 高速なキャッシュシステムにセッションデータを保存します。
    */


    'lifetime' => env('SESSION_LIFETIME', 120),

    /*　セッションの有効期限
    |--------------------------------------------------------------------------
    |  セッションが有効である時間を分単位で設定します。
    |　ここでは120分（2時間）に設定されています。ユーザーが最後に活動してからこの時間が経過すると、
    |　セッションが自動的に終了します。
    | 
    */

    'expire_on_close' => false,

        /*　ブラウザを閉じたときにセッションを終了するかどうかを決めます。
    |--------------------------------------------------------------------------
    |  false: ブラウザを閉じてもセッションは維持されます。
    |　true: ブラウザを閉じるとセッションが終了します。
    | 
    */

    'encrypt' => false,

        /*　セッションデータを暗号化するかどうかを決めます。
    |--------------------------------------------------------------------------
    |  true: セッションデータが暗号化されて保存されます。
    |　false: セッションデータはそのまま保存されます。
    | 
    */

    'files' => storage_path('framework/sessions'),

        /*　セッションデータを保存するディレクトリを指定します。
    |--------------------------------------------------------------------------
    |  fileドライバーを使用する場合、セッションデータが保存されるディレクトリのパスを指定します。
    |  デフォルトでは、storage/framework/sessionsフォルダに保存されます。
    | 
    */


    'connection' => env('SESSION_CONNECTION'),

        /*　データベースドライバーを使用する場合、どのデータベース接続を利用するかを指定します。
    |--------------------------------------------------------------------------
    |  databaseドライバーを使用する場合、どのデータベース接続を利用するかを指定します。
    |   通常はデフォルトの接続が使用されますが、特定の接続を使用したい場合に設定します。
    | 
    */

    'table' => 'sessions',

        /*　データベースドライバーを使用する場合、セッションデータを保存するテーブルの名前を指定します。
    |--------------------------------------------------------------------------
    | databaseドライバーを使用する場合、セッションデータを保存するテーブルの名前を指定します。
    |  デフォルトではsessionsという名前のテーブルが使用されます
    | 
    */

    'store' => env('SESSION_STORE'),

        /*　キャッシュシステムドライバーを使用する場合、どのキャッシュストアを利用するかを指定します。
    |--------------------------------------------------------------------------
    | キャッシュシステム（RedisやMemcachedなど）を使用する場合、どのキャッシュストアを利用するかを指定します。
    |  nullの場合はデフォルトのストアが使用されます。
    */

    'lottery' => [2, 100],
        /*　セッションガーベジコレクションの確率を設定します。
    |--------------------------------------------------------------------------
    | セッションガーベジコレクション（不要なセッションデータの削除）を実行する確率を設定します。
    |  ここでは、100回に2回の確率でガーベジコレクションが実行されます。
    */

    'cookie' => env(
        'SESSION_COOKIE',
        Str::slug(env('APP_NAME', 'laravel'), '_').'_session'
    ),

        /*　セッションIDを保存するクッキーの名前を指定します。
    |--------------------------------------------------------------------------
    | セッションIDを保存するクッキーの名前を指定します。
    | デフォルトではアプリケーション名に基づいた名前（例: laravel_session）が設定されます。
    | SESSION_COOKIE環境変数でカスタマイズできます。
    */

    'path' => '/',

        /*　
    | クッキーが有効なパスを指定します。'/'に設定すると、ドメイン全体でクッキーが有効になります。
    */

    'domain' => env('SESSION_DOMAIN'),

        /*　クッキーが有効なドメインを指定します。
    |--------------------------------------------------------------------------
    | クッキーが有効なドメインを指定します。例えば、example.comに設定すると、
    | example.comとそのサブドメインでクッキーが利用可能になります。
    | デフォルトではnullで、現在のドメインが使用されます。
    */

    'secure' => env('SESSION_SECURE_COOKIE'),

        /*　HTTPS接続時のみクッキーを送信するかどうかを指定します。
    |--------------------------------------------------------------------------
    | trueに設定すると、HTTPS接続時のみクッキーが送信されます。
    |  これにより、セキュリティが向上します。開発環境ではfalse、本番環境ではtrueに設定することが一般的です
    */

    'http_only' => true,

        /*　HTTPS接続時のみクッキーを送信するかどうかを指定します。
    |--------------------------------------------------------------------------
    | trueに設定すると、クッキーはJavaScriptからアクセスできなくなります。
    | これにより、クロスサイトスクリプティング（XSS）攻撃からセッションを保護します。
    */


    'same_site' => 'lax',

        /*　クッキーのSameSite属性を設定します。
            'lax'は、クロスサイトリクエスト時のクッキー送信を制限しつつ、ユーザーがリンクをクリックしてアクセスする場合は許可します。
            セキュリティを強化するために使用されます。
    |--------------------------------------------------------------------------
    | 'lax': 一般的なセキュリティ設定。
    | 'strict': さらに厳格にクロスサイトリクエストを制限。
    | 'none': クロスサイトリクエストでもクッキーを送信。
    */


    'partitioned' => false,
        /*　セッションのパーティションを有効にするかどうかを決めます。
    |--------------------------------------------------------------------------
    | セッションのパーティションを有効にするかどうかを決めます。
    | これは、特定の条件下でセッションデータを分割して保存するための設定です。通常はfalseで問題ありません。
    */
];
